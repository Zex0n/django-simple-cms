# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-09 13:16
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('edited_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата редактирования')),
                ('title', models.CharField(default='', max_length=1000, verbose_name='Название')),
                ('meta_description', models.CharField(blank=True, max_length=1000, verbose_name='Description')),
                ('meta_keywords', models.CharField(blank=True, max_length=1000, verbose_name='Keywords')),
                ('slug', models.SlugField(blank=True, help_text='Только английские буквы, цифры и знаки минус и подчеркивание.', unique=True, verbose_name='Имя для url')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Описание')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.Category', verbose_name='Родительский элемент')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Тэги')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('edited_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата редактирования')),
                ('title', models.CharField(default='', max_length=1000, verbose_name='Название')),
                ('meta_description', models.CharField(blank=True, max_length=1000, verbose_name='Description')),
                ('meta_keywords', models.CharField(blank=True, max_length=1000, verbose_name='Keywords')),
                ('slug', models.SlugField(blank=True, help_text='Только английские буквы, цифры и знаки минус и подчеркивание.', unique=True, verbose_name='Имя для url')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Описание')),
                ('status', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('category', models.ManyToManyField(to='shop.Category', verbose_name='Категория')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Тэги')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Item_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=1000, verbose_name='Название')),
                ('file', models.ImageField(upload_to='shop', verbose_name='Изображение')),
                ('num', models.IntegerField(blank=True, db_index=True, default=0, verbose_name='Порядковый номер')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='Item_variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('vendor_code', models.CharField(blank=True, max_length=255, verbose_name='Артикул')),
                ('default_variation', models.BooleanField(default=False, verbose_name='Вариация по умолчанию')),
                ('stock', models.IntegerField(default=0, verbose_name='На складе')),
                ('price_1', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена 1')),
                ('price_2', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена 2')),
                ('price_3', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена 3')),
                ('num', models.IntegerField(blank=True, db_index=True, default=0, verbose_name='Порядковый номер')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Item')),
            ],
            options={
                'verbose_name': 'Вариация',
                'verbose_name_plural': 'Вариации',
            },
        ),
        migrations.AddField(
            model_name='item_image',
            name='item_variation',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Item_variation'),
        ),
    ]
